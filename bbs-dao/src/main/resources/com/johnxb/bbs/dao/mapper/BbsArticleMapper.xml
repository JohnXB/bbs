<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.johnxb.bbs.dao.mapper.BbsArticleMapper">
    <resultMap id="BaseResultMap" type="com.johnxb.bbs.entity.BbsArticle">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="view_count" jdbcType="INTEGER" property="viewCount"/>
        <result column="is_examine" jdbcType="BIT" property="isExamine"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="comment_num" jdbcType="INTEGER" property="commentNum"/>
        <result column="type" jdbcType="BIT" property="type"/>
        <result column="examine_result" jdbcType="VARCHAR" property="examineResult"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="username" property="username"/>
        <result column="like_num" property="likeNum"/>
        <result column="tag_name" property="tagName"/>
    </resultMap>
    <!--通过tag获取文章列表-->
    <select id="getArticleByTag" resultMap="BaseResultMap">
        SELECT
        ba.title,au.username,ba.content,ba.view_count,ba.comment_num,ba.updated_at,ba.id,ba.type,ba.status,ba.like_num
        FROM bbs_article ba
        LEFT JOIN auth_user au ON au.id = ba.user_id
        LEFT JOIN bbs_tag bt on bt.id = ba.tag_id
        <where>
            #{tagId} = ba.tag_id
            AND is_examine = TRUE
            <if test="articleQuery.type == 2">
                -- 2表示文章状态为推荐
                AND ba.status = 2
            </if>
        </where>
        -- 点赞数排序
        <if test="articleQuery.type == 3">
            ORDER BY ba.like_num desc, ba.updated_at desc
        </if>
        <if test="articleQuery.type == 1 or articleQuery.type == 2">
            ORDER BY ba.updated_at desc
        </if>
    </select>
    <!--用户查看自己的文章列表-->
    <select id="getArticleByUser" resultMap="BaseResultMap">
        SELECT
        ba.title, ba.content, ba.view_count, ba.comment_num, ba.created_at, ba.id
        ,ba.like_num,bt.tag_name,ba.is_examine,ba.examine_result
        FROM bbs_article ba
        LEFT JOIN bbs_tag bt on ba.tag_id = bt.id
        <if test="type == 4">
            WHERE ba.user_id = #{userId} AND ba.status = 3
        </if>
        <if test="type != 4">
            WHERE ba.user_id = #{userId} AND ba.type = #{type}
        </if>

    </select>

    <!--创建文章-->
    <insert id="createArticle" parameterType="com.johnxb.bbs.entity.BbsArticle">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into bbs_article(title,user_id,tag_id,content,type,status,created_at)
        VALUES (#{title},#{userId},#{tagId},#{content},#{type},#{status},CURRENT_TIMESTAMP)
    </insert>

    <update id="updateArticle">
        update bbs_article
        set title = #{title},
        tag_id = #{tagId},
        content = #{content},
        status = #{status},
        created_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteArticle">
      DELETE FROM bbs_article
      WHERE user_id = #{userId} and id = #{articleId}
    </delete>

    <resultMap id="ArticleInfoMap" type="com.johnxb.bbs.entity.BbsArticle">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="view_count" jdbcType="INTEGER" property="viewCount"/>
        <result column="is_examine" jdbcType="BIT" property="isExamine"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="comment_num" jdbcType="INTEGER" property="commentNum"/>
        <result column="type" jdbcType="BIT" property="type"/>
        <result column="examine_result" jdbcType="VARCHAR" property="examineResult"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="username" property="username"/>
        <result column="like_num" property="likeNum"/>
    </resultMap>
    <!--查看文章（获取文章信息）-->
    <select id="getArticleInfoById" resultMap="ArticleInfoMap">
        SELECT ba.title,ba.content,ba.created_at,ba.view_count,ba.comment_num,au.username,ba.like_num,ba.id,ba.type
        FROM bbs_article ba
        LEFT JOIN auth_user au ON au.id = ba.user_id
        WHERE ba.is_examine = true AND ba.id = #{articleId}
    </select>

    <update id="commentNumAdd">
        UPDATE bbs_article
        set comment_num = comment_num + 1
        WHERE id = #{articleId}
    </update>

    <update id="commentNumReduce">
        UPDATE bbs_article
        set comment_num = comment_num - 1
        WHERE id = #{articleId}
    </update>

    <update id="viewCountAdd">
        UPDATE bbs_article
        set view_count = view_count + 1
        WHERE id = #{articleId}
    </update>

    <select id="searchByQuery" resultMap="BaseResultMap">
        SELECT ba.title,au.username,ba.content,ba.view_count,ba.comment_num,
               ba.updated_at,ba.id,ba.type,ba.status,ba.like_num
        FROM bbs_article ba
        LEFT JOIN auth_user au ON au.id = ba.user_id
        LEFT JOIN bbs_tag bt on bt.id = ba.tag_id
        WHERE (ba.title like concat('%',#{query},'%')
        or ba.context like concat('%',#{query},'%'))
        AND ba.is_examine = true
    </select>
</mapper>